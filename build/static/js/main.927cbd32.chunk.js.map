{"version":3,"sources":["services/persons.js","app.js","index.js"],"names":["axios","get","newObject","post","id","put","delete","Person","person","removePerson","name","number","onClick","Persons","persons","map","key","PersonForm","props","onSubmit","addPerson","value","newName","onChange","handleNewNameChange","newNumber","handleNewNumberChange","type","Filter","nameFilter","handleNameFilterChange","Notification","notification","undefined","className","text","App","useState","setPersons","setNewName","setNewNumber","setNameFilter","setNotification","useEffect","personService","then","response","data","filteredPersons","trim","length","filter","toUpperCase","includes","event","target","preventDefault","some","window","confirm","oldPerson","find","updatedPerson","updateId","returnedPerson","setTimeout","catch","error","msg","console","log","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.927cbd32.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst BASE_URL = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  return axios.get(BASE_URL)\r\n}\r\n\r\nconst create = newObject => {\r\n  return axios.post(BASE_URL, newObject)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(`${BASE_URL}/${id}`, newObject)\r\n}\r\n\r\nconst remove = (id) => {\r\n  return axios.delete(`${BASE_URL}/${id}`)\r\n}\r\n\r\nexport default {getAll, create, update, remove}","import React, { useState, useEffect } from 'react'\r\nimport personService from './services/persons'\r\n\r\nconst Person = ({person, removePerson}) => {\r\n  return (\r\n    <div>\r\n      {person.name} {person.number}\r\n      <button onClick={() => removePerson(person.id, person.name)}>delete</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Persons = ({persons, removePerson}) => {\r\n  return (\r\n    <div>\r\n      {persons.map(person => \r\n        <Person \r\n          key={person.name} \r\n          person={person} \r\n          removePerson={removePerson}>\r\n        </Person>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst PersonForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.addPerson}>\r\n      <div>\r\n        name: \r\n        <input value={props.newName} onChange={props.handleNewNameChange}/>\r\n      </div>\r\n      <div>\r\n        number: \r\n        <input value={props.newNumber} onChange={props.handleNewNumberChange}/>\r\n      </div>\r\n      <div><button type=\"submit\">add</button></div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst Filter = ({nameFilter, handleNameFilterChange}) => {\r\n  return (\r\n    <div>\r\n      filter shown with:\r\n      <input value={nameFilter} onChange={handleNameFilterChange}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Notification = ({notification}) => {\r\n  if (notification === undefined) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={notification.type}>\r\n      {notification.text}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]) \r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [nameFilter, setNameFilter] = useState('')\r\n  const [notification, setNotification] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(response => {\r\n        setPersons(response.data)\r\n      })\r\n  }, [])\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n    if (persons.some(person => person.name.toUpperCase() === newName.toUpperCase())) {\r\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\r\n        const oldPerson = persons.find(person => person.name === newName)\r\n        const updatedPerson = {...oldPerson, number: newNumber}\r\n        const updateId = updatedPerson.id\r\n        \r\n        personService\r\n          .update(updateId, updatedPerson)\r\n          .then(response => response.data)\r\n          .then(returnedPerson => {\r\n            if (!returnedPerson) {\r\n              setNotification({text: `Information of ${newName} has already been removed from server`, type: 'error'})\r\n              setTimeout(() => setNotification(undefined), 2000)\r\n              personService.getAll().then(response => setPersons(response.data))\r\n              return\r\n            }\r\n            setPersons(persons.map(person => person.id !== updateId ? person : returnedPerson))\r\n            setNewName('')\r\n            setNewNumber('')\r\n            setNotification({text: `Number updated for ${newName}`, type: 'success'})\r\n            setTimeout(() => setNotification(undefined), 2000)\r\n          })\r\n          .catch(error => {\r\n            const msg = error.response.data.error\r\n            console.log(msg)\r\n            setNotification({text: \"Person validation failed: \" + msg, type: 'error'})\r\n            setTimeout(() => setNotification(undefined), 2000)\r\n          })\r\n      }\r\n      return\r\n    }\r\n\r\n    const newPerson = {\r\n      name: newName,\r\n      number: newNumber\r\n    }\r\n\r\n    personService\r\n      .create(newPerson)\r\n      .then(response => {\r\n        setPersons(persons.concat(response.data))\r\n        setNewName('')\r\n        setNewNumber('')\r\n        setNotification({text: `Added ${newName}`, type: 'success'})\r\n        setTimeout(() => setNotification(undefined), 2000)\r\n      })\r\n      .catch(error => {\r\n        const msg = error.response.data.error\r\n        console.log(msg)\r\n        setNotification({text: \"Person validation failed: \" + msg, type: 'error'})\r\n        setTimeout(() => setNotification(undefined), 2000)\r\n      })\r\n  }\r\n\r\n  const removePerson = (id, name) => {\r\n    if (window.confirm(`Delete ${name}?`)) {\r\n      personService\r\n        .remove(id)\r\n        .then(() => personService.getAll())\r\n        .then(response => {\r\n          setPersons(response.data)\r\n          setNotification({text: `Deleted ${name}`, type: 'success'})\r\n          setTimeout(() => setNotification(undefined), 2000)\r\n        })\r\n        .catch(error => console.error(error))\r\n    }\r\n  }\r\n\r\n  const handleNewNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNewNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleNameFilterChange = (event) => {\r\n    setNameFilter(event.target.value)\r\n  }\r\n\r\n  const filteredPersons = !nameFilter || nameFilter.trim().length === 0 \r\n    ? persons\r\n    : persons.filter(person => person.name.toUpperCase().includes(nameFilter.toUpperCase()))\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification notification={notification}></Notification>\r\n      <Filter \r\n        nameFilter={nameFilter} \r\n        handleNameFilterChange={handleNameFilterChange}>\r\n      </Filter>\r\n\r\n      <h3>Add a new</h3>\r\n      <PersonForm \r\n        addPerson={addPerson} \r\n        newName={newName} \r\n        handleNewNameChange={handleNewNameChange}\r\n        newNumber={newNumber}\r\n        handleNewNumberChange={handleNewNumberChange}>\r\n      </PersonForm>\r\n      \r\n      <h3>Numbers</h3>\r\n      <Persons \r\n        persons={filteredPersons} \r\n        removePerson={removePerson}>\r\n      </Persons>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}